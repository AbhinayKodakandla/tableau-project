<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='2' />
      <format attr='animation-style' value='as-phased' />
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='covid_19_india+' inline='true' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.0c32gz617abtq11bui8ng0txys02'>
            <connection class='textscan' directory='C:/Users/abhin/Downloads' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='TotalSamples' ordinal='2' />
            <column datatype='integer' name='Negative' ordinal='3' />
            <column datatype='real' name='Positive' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Sno' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='string' name='Time' ordinal='2' />
              <column datatype='string' name='State/UnionTerritory' ordinal='3' />
              <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
              <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
              <column datatype='integer' name='Cured' ordinal='6' />
              <column datatype='integer' name='Deaths' ordinal='7' />
              <column datatype='integer' name='Confirmed' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='real' name='TotalSamples' ordinal='2' />
              <column datatype='integer' name='Negative' ordinal='3' />
              <column datatype='real' name='Positive' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Updated On' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='real' name='Total Doses Administered' ordinal='2' />
              <column datatype='real' name='Sessions' ordinal='3' />
              <column datatype='real' name='Sites ' ordinal='4' />
              <column datatype='real' name='First Dose Administered' ordinal='5' />
              <column datatype='real' name='Second Dose Administered' ordinal='6' />
              <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
              <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
              <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
              <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
              <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
              <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
              <column datatype='real' name='AEFI' ordinal='13' />
              <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
              <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
              <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
              <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
              <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
              <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
              <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
              <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
              <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
              <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[18-44 Years (Doses Administered)]' value='[covid_vaccine_statewise.csv].[18-44 Years (Doses Administered)]' />
          <map key='[18-44 Years(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[18-44 Years(Individuals Vaccinated)]' />
          <map key='[45-60 Years (Doses Administered)]' value='[covid_vaccine_statewise.csv].[45-60 Years (Doses Administered)]' />
          <map key='[45-60 Years(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[45-60 Years(Individuals Vaccinated)]' />
          <map key='[60+ Years (Doses Administered)]' value='[covid_vaccine_statewise.csv].[60+ Years (Doses Administered)]' />
          <map key='[60+ Years(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[60+ Years(Individuals Vaccinated)]' />
          <map key='[AEFI]' value='[covid_vaccine_statewise.csv].[AEFI]' />
          <map key='[ConfirmedForeignNational]' value='[covid_19_india.csv].[ConfirmedForeignNational]' />
          <map key='[ConfirmedIndianNational]' value='[covid_19_india.csv].[ConfirmedIndianNational]' />
          <map key='[Confirmed]' value='[covid_19_india.csv].[Confirmed]' />
          <map key='[Covaxin (Doses Administered)]' value='[covid_vaccine_statewise.csv].[Covaxin (Doses Administered)]' />
          <map key='[CoviShield (Doses Administered)]' value='[covid_vaccine_statewise.csv].[CoviShield (Doses Administered)]' />
          <map key='[Cured]' value='[covid_19_india.csv].[Cured]' />
          <map key='[Date (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[Date]' />
          <map key='[Date]' value='[covid_19_india.csv].[Date]' />
          <map key='[Deaths]' value='[covid_19_india.csv].[Deaths]' />
          <map key='[Female (Doses Administered)]' value='[covid_vaccine_statewise.csv].[Female (Doses Administered)]' />
          <map key='[Female(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[Female(Individuals Vaccinated)]' />
          <map key='[First Dose Administered]' value='[covid_vaccine_statewise.csv].[First Dose Administered]' />
          <map key='[Male (Doses Administered)]' value='[covid_vaccine_statewise.csv].[Male (Doses Administered)]' />
          <map key='[Male(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[Male(Individuals Vaccinated)]' />
          <map key='[Negative]' value='[StatewiseTestingDetails.csv].[Negative]' />
          <map key='[Positive]' value='[StatewiseTestingDetails.csv].[Positive]' />
          <map key='[Second Dose Administered]' value='[covid_vaccine_statewise.csv].[Second Dose Administered]' />
          <map key='[Sessions]' value='[covid_vaccine_statewise.csv].[Sessions]' />
          <map key='[Sites ]' value='[covid_vaccine_statewise.csv].[Sites ]' />
          <map key='[Sno]' value='[covid_19_india.csv].[Sno]' />
          <map key='[Sputnik V (Doses Administered)]' value='[covid_vaccine_statewise.csv].[Sputnik V (Doses Administered)]' />
          <map key='[State (covid_vaccine_statewise.csv)]' value='[covid_vaccine_statewise.csv].[State]' />
          <map key='[State/UnionTerritory]' value='[covid_19_india.csv].[State/UnionTerritory]' />
          <map key='[State]' value='[StatewiseTestingDetails.csv].[State]' />
          <map key='[Time]' value='[covid_19_india.csv].[Time]' />
          <map key='[Total Doses Administered]' value='[covid_vaccine_statewise.csv].[Total Doses Administered]' />
          <map key='[Total Individuals Vaccinated]' value='[covid_vaccine_statewise.csv].[Total Individuals Vaccinated]' />
          <map key='[TotalSamples]' value='[StatewiseTestingDetails.csv].[TotalSamples]' />
          <map key='[Transgender (Doses Administered)]' value='[covid_vaccine_statewise.csv].[Transgender (Doses Administered)]' />
          <map key='[Transgender(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[Transgender(Individuals Vaccinated)]' />
          <map key='[Updated On]' value='[covid_vaccine_statewise.csv].[Updated On]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalSamples]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Updated On</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Updated On]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Updated On</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (covid_vaccine_statewise.csv)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Doses Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Doses Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Doses Administered</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sessions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sessions]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sessions</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sites </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sites ]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sites </remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[First Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>First Dose Administered</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Second Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Second Dose Administered</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male (Doses Administered)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female (Doses Administered)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender (Doses Administered)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covaxin (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covaxin (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Covaxin (Doses Administered)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CoviShield (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CoviShield (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>CoviShield (Doses Administered)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sputnik V (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sputnik V (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sputnik V (Doses Administered)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AEFI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AEFI]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>AEFI</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-44 Years (Doses Administered)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 Years (Doses Administered)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ Years (Doses Administered)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-44 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ Years(Individuals Vaccinated)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male(Individuals Vaccinated)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female(Individuals Vaccinated)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender(Individuals Vaccinated)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Individuals Vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Individuals Vaccinated]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Individuals Vaccinated</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aefi' datatype='real' name='[AEFI]' role='measure' type='quantitative' />
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[First Dose Administered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
      <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
      <column datatype='real' name='[Second Dose Administered]' role='measure' type='quantitative' />
      <column caption='Sites' datatype='real' name='[Sites ]' role='measure' type='quantitative' />
      <column caption='State (covid vaccine statewise.csv)' datatype='string' name='[State (covid_vaccine_statewise.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='StatewiseTestingDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_vaccine_statewise.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8]' role='measure' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[First Dose Administered]' derivation='Sum' name='[sum:First Dose Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Second Dose Administered]' derivation='Sum' name='[sum:Second Dose Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State (covid vaccine statewise.csv))' hidden='true' name='[Action (State (covid vaccine statewise.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (covid_vaccine_statewise.csv)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Negative:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:TotalSamples:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Second Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Cured:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:First Dose Administered:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maharashtra***&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karanataka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dadra and Nagar Haveli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bihar****&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cases being reassigned to states&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madhya Pradesh***&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Himanchal Pradesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unassigned&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='StatewiseTestingDetails.csv' id='StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E'>
            <properties context=''>
              <relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='TotalSamples' ordinal='2' />
                  <column datatype='integer' name='Negative' ordinal='3' />
                  <column datatype='real' name='Positive' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2'>
            <properties context=''>
              <relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid_vaccine_statewise.csv' id='covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8'>
            <properties context=''>
              <relation connection='textscan.0c32gz617abtq11bui8ng0txys02' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Updated On' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='Total Doses Administered' ordinal='2' />
                  <column datatype='real' name='Sessions' ordinal='3' />
                  <column datatype='real' name='Sites ' ordinal='4' />
                  <column datatype='real' name='First Dose Administered' ordinal='5' />
                  <column datatype='real' name='Second Dose Administered' ordinal='6' />
                  <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
                  <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
                  <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
                  <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
                  <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
                  <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
                  <column datatype='real' name='AEFI' ordinal='13' />
                  <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
                  <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
                  <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
                  <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
                  <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
                  <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
                  <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
                  <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
                  <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
                  <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Date (StatewiseTestingDetails.csv)]' />
            </expression>
            <first-end-point object-id='covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2' />
            <second-end-point object-id='StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (covid_vaccine_statewise.csv)]' />
            </expression>
            <first-end-point object-id='StatewiseTestingDetails.csv_AF984712BBD44DC9A12A376F8F898E9E' />
            <second-end-point object-id='covid_vaccine_statewise.csv_97769175D63D47F8A1EB41D8199741B8' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
      <datasources>
        <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
      </datasources>
      <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
        <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
        <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
        <column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
        <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' included-values='all' />
      <filter class='quantitative' column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Hyperlink1' name='[Action1_2C4960B722494FF2BED3FC72CE2CC466]'>
      <activation type='on-select' />
      <source datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx' type='datasource' />
      <link caption='' expression='https://en.wikipedia.org/wiki/COVID-19_pandemic_&lt;[State]&gt;' />
    </action>
    <datasources>
      <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
    </datasources>
    <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='No of covaxin and covishield admistred doses in india'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Bahnschrift SemiBold'> Covaxin and Covishield Admistred Doses in India</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
            <column datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='State (covid vaccine statewise.csv)' datatype='string' name='[State (covid_vaccine_statewise.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='covid_19_india.csv' datatype='integer' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[State (covid_vaccine_statewise.csv)]' derivation='None' name='[none:State (covid_vaccine_statewise.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State (covid_vaccine_statewise.csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State (covid_vaccine_statewise.csv):nk]' />
              <groupfilter function='member' level='[none:State (covid_vaccine_statewise.csv):nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State (covid_vaccine_statewise.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State (covid_vaccine_statewise.csv):nk]</column>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]</column>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='total' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' max='3084927597.0' min='0.0' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dae1cb</color>
                <color>#c4d1a9</color>
                <color>#b0c189</color>
                <color>#9cb16d</color>
                <color>#89a253</color>
                <color>#77923d</color>
                <color>#66822a</color>
                <color>#56721a</color>
                <color>#48620d</color>
                <color>#3a5303</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d6d6d6' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aa0000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' value='Covaxin Doses Administered'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial'>Covaxin Doses Administered</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' value='CoviShield Doses Administereda'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Arial'>CoviShield Doses Administereda</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk] + [federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk])</rows>
        <cols>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State (covid_vaccine_statewise.csv):nk]</cols>
      </table>
      <simple-id uuid='{ADB6505B-D299-4ADE-93A8-7D517CE961FC}' />
    </worksheet>
    <worksheet name='State wise covid deaths cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial'>Covid Death Cases In India</run>
            <run fontalignment='1' fontcolor='#ffffff'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='covid_19_india.csv' datatype='integer' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]</column>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' min='1' num-steps='5' palette='orange_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#57b6ff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aa0000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' value='Deaths' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' value='Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]</rows>
        <cols>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{1CE8CB56-8B38-4B71-AE23-9D7C641D034B}' />
    </worksheet>
    <worksheet name='Totoal no of cases filed in States in india'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial'>Count Of Cases In India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='covid_19_india.csv' datatype='integer' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]</column>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#1d1d1d' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aa0000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' value='State/UnionTerritory'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial'>State/UnionTerritory</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' value='Count of covid_19 India'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial'>Count of covid_19 India</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' />
              <color column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DD85EDB7-2CC1-44EB-BCC3-E85DE25511B0}' />
    </worksheet>
    <worksheet name='no of cured and death covid cases in india'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial'>Cured and Death Covid Cases In India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='covid_19_india.csv' datatype='integer' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]</column>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aa0000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0' value-column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' z-order='1' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Cured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Cured:qk] + [federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk])</rows>
        <cols>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{0D7924E4-CAF9-4663-8711-710B80671E97}' />
    </worksheet>
    <worksheet name='state wise covid positive cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>Covid Positive Cases In India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='covid_19_india.csv' datatype='integer' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]</column>
            <column>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[Longitude (generated)]' field-type='quantitative' max='12838968.102586459' min='5839581.828112578' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[Latitude (generated)]' field-type='quantitative' max='4469629.477806855' min='432615.51439540228' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aa0000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]' value='Positive'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial'>Positive</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]' />
              <text column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State:nk]' />
              <lod column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State:nk]' />
              <geometry column='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[Latitude (generated)]</rows>
        <cols>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{361CEE4E-E4C0-4312-B7ED-3541D1D4869D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>COVID-19 IN INDIA</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#aa0000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid_19_india+' name='federated.0bccq6f01goo8j1c0ispa1l26rwx' />
      </datasources>
      <datasource-dependencies datasource='federated.0bccq6f01goo8j1c0ispa1l26rwx'>
        <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
        <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' pivot='key' type='quantitative' />
        <column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2]' role='measure' type='quantitative' />
        <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone h='5250' id='27' type-v2='title' w='98858' x='571' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='24' type-v2='layout-basic' w='98858' x='571' y='6250'>
              <zone h='66601' id='7' param='horz' type-v2='layout-flow' w='98858' x='571' y='6250'>
                <zone h='66601' id='5' type-v2='layout-basic' w='87429' x='571' y='6250'>
                  <zone h='33303' id='3' name='state wise covid positive cases' w='40103' x='571' y='39548'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='' h='33249' id='23' param='https://en.wikipedia.org/wiki/COVID-19_pandemic_Dadra and Nagar Haveli and Daman and Diu' type-v2='web' w='47326' x='40674' y='39602'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='33352' id='9' name='State wise covid deaths cases' w='47326' x='40674' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='33298' id='20' name='Totoal no of cases filed in States in india' w='40103' x='571' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='66601' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11429' x='88000' y='6250'>
                  <zone h='9085' id='10' name='State wise covid deaths cases' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11429' x='88000' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9085' id='21' name='Totoal no of cases filed in States in india' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11429' x='88000' y='15335'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9085' id='8' name='state wise covid positive cases' pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]' type-v2='color' w='11429' x='88000' y='24420'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9085' id='11' name='State wise covid deaths cases' pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' type-v2='color' w='11429' x='88000' y='33505'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3000' id='13' name='no of cured and death covid cases in india' pane-specification-id='4' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[:Measure Names]' type-v2='color' w='11429' x='88000' y='42590'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9085' id='18' name='No of covaxin and covishield admistred doses in india' pane-specification-id='12' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' type-v2='color' w='11429' x='88000' y='45590'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9085' id='19' name='No of covaxin and covishield admistred doses in india' pane-specification-id='13' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' type-v2='color' w='11429' x='88000' y='54675'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9091' id='22' name='Totoal no of cases filed in States in india' pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' type-v2='color' w='11429' x='88000' y='63760'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='26149' id='17' name='No of covaxin and covishield admistred doses in india' w='49429' x='50000' y='72851'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26149' id='12' name='no of cured and death covid cases in india' w='49429' x='571' y='72851'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Times New Roman'>COVID-19 IN INDIA</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='46' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone h='5250' id='27' type-v2='title' w='98858' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9085' id='21' name='Totoal no of cases filed in States in india' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11429' x='88000' y='15335'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' h='33298' id='20' is-fixed='true' name='Totoal no of cases filed in States in india' w='40103' x='571' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9091' id='22' name='Totoal no of cases filed in States in india' pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' type-v2='color' w='11429' x='88000' y='63760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9085' id='10' name='State wise covid deaths cases' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11429' x='88000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='259' h='33352' id='9' is-fixed='true' name='State wise covid deaths cases' w='47326' x='40674' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9085' id='11' name='State wise covid deaths cases' pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' type-v2='color' w='11429' x='88000' y='33505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='259' h='33303' id='3' is-fixed='true' name='state wise covid positive cases' w='40103' x='571' y='39548'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9085' id='8' name='state wise covid positive cases' pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]' type-v2='color' w='11429' x='88000' y='24420'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' forceUpdate='' h='33249' id='23' is-fixed='true' param='https://en.wikipedia.org/wiki/COVID-19_pandemic_Dadra and Nagar Haveli and Daman and Diu' type-v2='web' w='47326' x='40674' y='39602'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='201' h='26149' id='12' is-fixed='true' name='no of cured and death covid cases in india' w='49429' x='571' y='72851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='13' name='no of cured and death covid cases in india' pane-specification-id='4' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[:Measure Names]' type-v2='color' w='11429' x='88000' y='42590'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='201' h='26149' id='17' is-fixed='true' name='No of covaxin and covishield admistred doses in india' w='49429' x='50000' y='72851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9085' id='18' name='No of covaxin and covishield admistred doses in india' pane-specification-id='12' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' type-v2='color' w='11429' x='88000' y='45590'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9085' id='19' name='No of covaxin and covishield admistred doses in india' pane-specification-id='13' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' type-v2='color' w='11429' x='88000' y='54675'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B966C657-7951-4699-A35B-6F44882357FA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='state wise covid positive cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State:nk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Negative:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C67CEA5-C04D-4D77-A0D6-DC843A8C2471}' />
    </window>
    <window class='worksheet' name='State wise covid deaths cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:ConfirmedForeignNational:nk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:ConfirmedIndianNational:nk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25D622BE-92E7-4E6D-95FD-E139D7DCF441}' />
    </window>
    <window class='worksheet' name='no of cured and death covid cases in india'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[:Measure Names]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:Confirmed:qk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:Cured:qk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:Deaths:qk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BC83093-8B75-4B43-89F9-90DAC73C90D8}' />
    </window>
    <window class='worksheet' name='Totoal no of cases filed in States in india'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_45EA9871EFED4AB1B173E0374C96FBB2:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B109175-4CC7-4F10-ACF8-B3B05DDE3CB1}' />
    </window>
    <window class='worksheet' name='No of covaxin and covishield admistred doses in india'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]' type='color' />
            <card pane-specification-id='13' param='[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:Covaxin (Doses Administered):qk]</field>
            <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[sum:CoviShield (Doses Administered):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4308387-1F74-42BD-BF3E-0102C49CB460}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='No of covaxin and covishield admistred doses in india'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State wise covid deaths cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Totoal no of cases filed in States in india'>
          <highlight>
            <color-one-way>
              <field>[federated.0bccq6f01goo8j1c0ispa1l26rwx].[none:State/UnionTerritory:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='no of cured and death covid cases in india'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='state wise covid positive cases'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1E4B1FB2-CF6F-4B6E-A231-D8A97D9F38EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      fAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='No of covaxin and covishield admistred doses in india' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='State wise covid deaths cases' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Totoal no of cases filed in States in india' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='no of cured and death covid cases in india' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='state wise covid positive cases' width='192'>
      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
      sK+hQ4eHxv8HlQghHnE+1UEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
